/**
 * –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è React Native –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ó–∞–ø—É—Å–∫: node debug-tokens.js
 */

const TokenDebugger = require('./src/debug/TokenDebugger').default;

async function runDiagnostic() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤...\n');

    try {
        const result = await TokenDebugger.runFullDiagnostic();

        console.log('\n=== –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ===');
        if (result.success) {
            console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!');
            console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –≥–æ—Ç–æ–≤—ã –¥–ª—è Socket.IO');
        } else {
            console.log('‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:');
            result.issues?.forEach(issue => console.log('  ', issue));

            console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
            if (result.issues?.some(issue => issue.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω—ã'))) {
                console.log('  - –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ');
            }
            if (result.issues?.some(issue => issue.includes('–∏—Å—Ç–µ–∫'))) {
                console.log('  - –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
            }
            if (result.issues?.some(issue => issue.includes('–ø–∞—Ä—Å–∏–Ω–≥–∞'))) {
                console.log('  - –û—á–∏—Å—Ç–∏—Ç–µ AsyncStorage –∏ –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ');
            }
        }

        return result;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
        return null;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { runDiagnostic };
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (typeof require !== 'undefined' && require.main === module) {
    runDiagnostic();
}
