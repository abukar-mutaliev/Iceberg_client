import OneSignalService from './OneSignalService';

class PushNotificationService {
    constructor() {
        this.oneSignalAppId = 'a1bde379-4211-4fb9-89e2-3e94530a7041';
        
        this.isInitialized = false;
        this.navigationReady = false;
        this.pendingNavigations = [];
        
        // –§—É–Ω–∫—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.navigateToStopsFunc = null;
        this.navigateToOrderFunc = null;
        this.navigateToChatFunc = null;
        this.navigateToUrlFunc = null;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
    async initialize() {
        try {
            if (this.isInitialized) {
                console.log('üîî PushNotificationService —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                return true;
            }

            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PushNotificationService —Å OneSignal');

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OneSignal
            const success = await OneSignalService.initialize(this.oneSignalAppId);
            
            if (!success) {
                console.error('‚ùå OneSignal –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
                return false;
            }

            this.isInitialized = true;
            console.log('‚úÖ PushNotificationService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å OneSignal');
            
            return true;

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PushNotificationService:', error);
            return false;
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async initializeForUser(user) {
        try {
            console.log('üë§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PushNotificationService –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id);

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
            const baseInitResult = await this.initialize();
            if (!baseInitResult) {
                return false;
            }

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OneSignal –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userInitResult = await OneSignalService.initializeForUser(user);
            if (!userInitResult) {
                console.error('‚ùå OneSignal –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
                return false;
            }

            console.log('‚úÖ PushNotificationService –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id);
            return true;

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ initializeForUser:', error);
            return false;
        }
    }

    // –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async clearUserContext() {
        try {
            console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            await OneSignalService.clearUserContext();
            console.log('‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—á–∏—â–µ–Ω');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:', error);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ–∫–µ–Ω–∞/subscription ID
    getCurrentToken() {
        return OneSignalService.getCurrentSubscriptionId();
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
    getServiceStatus() {
        const oneSignalStatus = OneSignalService.getStatus();
        
        return {
            isInitialized: this.isInitialized,
            navigationReady: this.navigationReady,
            pendingNavigationsCount: this.pendingNavigations.length,
            service: 'OneSignal',
            oneSignal: oneSignalStatus
        };
    }

    getStatus() {
        return this.getServiceStatus();
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setNavigationFunctions(navigateToStops, navigateToOrder, navigateToChat, navigateToUrl) {
        this.navigateToStopsFunc = navigateToStops;
        this.navigateToOrderFunc = navigateToOrder;
        this.navigateToChatFunc = navigateToChat;
        this.navigateToUrlFunc = navigateToUrl;

        this.setNavigationReady();
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setNavigationReady() {
        this.navigationReady = true;

        if (this.pendingNavigations.length > 0) {
            this.pendingNavigations.forEach(data => {
                this.handleNotificationNavigation(data);
            });
            this.pendingNavigations = [];
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è)
    handleNotificationNavigation(data) {
        if (!this.navigationReady) {
            this.pendingNavigations.push(data);
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if (data.stopId || data.type === 'STOP_NOTIFICATION' || data.type === 'STOP_UPDATE' || data.type === 'STOP_CANCEL') {
            this.navigateToStop(data);
        } else if (data.orderId || data.type === 'ORDER_STATUS') {
            this.navigateToOrder(data);
        } else if (data.productId || data.type === 'PRODUCT_NOTIFICATION' || data.type === 'PROMOTION') {
            this.navigateToProduct(data);
        } else if (data.type === 'CHAT_MESSAGE' && data.roomId) {
            this.navigateToChat(data);
        } else if (data.url) {
            this.navigateToUrl(data.url);
        } else {
            console.log('‚ÑπÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', data.type);
        }
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º
    navigateToStop(data) {
        if (this.navigateToStopsFunc && typeof this.navigateToStopsFunc === 'function') {
            this.navigateToStopsFunc(data);
        }
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∑–∞–∫–∞–∑–∞–º
    navigateToOrder(data) {
        console.log('üì¶ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∑–∞–∫–∞–∑—É –≤—ã–∑–≤–∞–Ω–∞:', data);
        if (this.navigateToOrderFunc && typeof this.navigateToOrderFunc === 'function') {
            console.log('üì¶ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∑–∞–∫–∞–∑—É:', data.orderId);
            this.navigateToOrderFunc(data);
        } else {
            console.warn('‚ö†Ô∏è navigateToOrderFunc –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
        }
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º
    navigateToProduct(data) {
        // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –ø—Ä–æ–¥—É–∫—Ç—É
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ —á–∞—Ç—É
    navigateToChat(data) {
        if (this.navigateToChatFunc && typeof this.navigateToChatFunc === 'function') {
            this.navigateToChatFunc(data);
        } else {
            if (data.url) {
                this.navigateToUrl(data.url);
            }
        }
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ URL
    navigateToUrl(url) {
        if (this.navigateToUrlFunc && typeof this.navigateToUrlFunc === 'function') {
            this.navigateToUrlFunc(url);
        }
    }

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    async forceInitialize() {
        this.isInitialized = false;
        return await this.initialize();
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async setUserTags(tags) {
        await OneSignalService.setUserTags(tags);
    }

    // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º API
    async getDeviceToken() {
        return this.getCurrentToken();
    }

    async registerForPushNotificationsAsync() {
        return await this.initialize();
    }
}

const pushNotificationService = new PushNotificationService();

export default pushNotificationService;
export { pushNotificationService as PushNotificationService };