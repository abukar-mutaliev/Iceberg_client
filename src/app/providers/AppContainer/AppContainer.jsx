import React, { useRef, useEffect, useState } from 'react';
import { StatusBar, View, Platform } from 'react-native';
import { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';
import { useAuth } from '@entities/auth/hooks/useAuth';
import { useDispatch } from 'react-redux';
import { fetchFavorites } from '@entities/favorites';
import { useCartAutoLoad, useCartAvailability, CartAuthHandler } from '@entities/cart';
import { AuthDialog } from "@entities/auth/ui/AuthDialog";
import PushNotificationService from "@shared/services/PushNotificationService";
import { usePushTokenAutoRegistration } from '@shared/hooks/usePushTokenAutoRegistration';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ErrorBoundary –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –æ—à–∏–±–æ–∫ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
class ErrorBoundary extends React.Component {
    constructor(props) {
        super(props);
        this.state = { hasError: false, error: null };
    }

    static getDerivedStateFromError(error) {
        return { hasError: true, error };
    }

    componentDidCatch(error, errorInfo) {
        console.error('AppContainer ErrorBoundary caught an error:', error, errorInfo);

        // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        if (error.message && error.message.includes('Malformed calls from JS')) {
            console.error('Detected Malformed calls from JS error - likely SVG/Native component issue');
        }
    }

    render() {
        if (this.state.hasError) {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∑–∞–≥–ª—É—à–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
            return (
                <SafeAreaView style={{ flex: 1, backgroundColor: '#ffffff' }}>
                    <StatusBar backgroundColor="#ffffff" barStyle="dark-content" />
                    <View style={{
                        flex: 1,
                        justifyContent: 'center',
                        alignItems: 'center',
                        padding: 20
                    }}>
                        {/* –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π UI –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ */}
                        <View style={{
                            backgroundColor: '#f5f5f5',
                            padding: 20,
                            borderRadius: 8,
                            alignItems: 'center'
                        }}>
                            {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –±–µ–∑ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ */}
                            <StatusBar backgroundColor="#ffffff" barStyle="dark-content" />
                        </View>
                    </View>
                </SafeAreaView>
            );
        }

        return this.props.children;
    }
}

export const AppContainer = ({ children, onNavigateToAuth }) => {
    const dispatch = useDispatch();
    const authDialogRef = useRef(null);
    const {isAuthenticated, setAuthDialogRef, user} = useAuth();
    const {isCartAvailable} = useCartAvailability();

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const [isInitialized, setIsInitialized] = useState(false);
    const pushInitializationAttempted = useRef(false);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤)
    useCartAutoLoad({
        loadOnMount: isCartAvailable,
        loadOnAuthChange: isCartAvailable,
        autoMergeGuestCart: isCartAvailable,
        enableReservationCheck: isCartAvailable
    });

    usePushTokenAutoRegistration();

    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø PUSH-–£–í–ï–î–û–ú–õ–ï–ù–ò–ô
    useEffect(() => {
        const initializePushNotifications = async () => {
            if (!isAuthenticated || !user) {
                console.log('üîî AppContainer: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                pushInitializationAttempted.current = false;
                // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ push —Å–µ—Ä–≤–∏—Å–µ
                PushNotificationService.clearUserContext();
                return;
            }

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
            const { tokens } = useSelector((state) => state.auth);
            if (!tokens?.accessToken) {
                console.log('üîî AppContainer: –¢–æ–∫–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
                return;
            }

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è preview/production)
            const buildType = PushNotificationService.getBuildType();
            if (buildType === 'development' || buildType === 'expo-go') {
                console.log('‚ÑπÔ∏è AppContainer: Expo Go —Ä–µ–∂–∏–º - Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ç–æ–∫–µ–Ω–∞');
            } else {
                const currentToken = PushNotificationService.getCurrentToken();
                if (!currentToken) {
                    console.log('üîç AppContainer: Push —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º...');
                    try {
                        const token = await PushNotificationService.getFCMToken();
                        if (token) {
                            console.log('üé´ AppContainer: FCM —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
                            const saved = await PushNotificationService.saveTokenToServerSafe(token, PushNotificationService._deviceId, Platform.OS);
                            if (saved) {
                                console.log('üíæ AppContainer: –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
                            }
                        }
                    } catch (error) {
                        console.warn('‚ö†Ô∏è AppContainer: –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error);
                    }
                }
            }

            const currentUserId = user.id;
            const lastInitializedUserId = pushInitializationAttempted.current;

            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏
            if (lastInitializedUserId === currentUserId) {
                console.log('üîî AppContainer: Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUserId);
                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ usePushTokenAutoRegistration
                return;
            }

            console.log('üîî AppContainer: –ù–∞—á–∏–Ω–∞–µ–º –ü–û–õ–ù–£–Æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUserId, '—Ä–æ–ª—å:', user.role);
            pushInitializationAttempted.current = currentUserId;

            try {
                console.log('üîê AppContainer: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
                const permissions = await PushNotificationService.requestPermissions();
                console.log('üîê AppContainer: –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', permissions);

                const success = await PushNotificationService.initializeForUser(user);

                if (success) {
                    console.log('‚úÖ AppContainer: Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                    const token = PushNotificationService.getCurrentToken();
                    console.log('üé´ AppContainer: –¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', token ? token.substring(0, 50) + '...' : '–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞');
                } else {
                    console.log('‚ùå AppContainer: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
                    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
                    pushInitializationAttempted.current = false;
                }
            } catch (error) {
                console.error('‚ùå AppContainer: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
                pushInitializationAttempted.current = false;
            }
        };

        //   –£–±–∏—Ä–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        initializePushNotifications();
    }, [isAuthenticated, user?.id, user?.role]);

    useEffect(() => {
        try {
            if (authDialogRef.current && setAuthDialogRef && typeof setAuthDialogRef === 'function') {
                setAuthDialogRef(authDialogRef.current);
            }
        } catch (error) {
            console.error('AppContainer: –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ authDialogRef:', error);
        }
    }, [setAuthDialogRef]);

    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    useEffect(() => {
        if (isAuthenticated && !isInitialized) {
            setIsInitialized(true);

            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
            const timer = setTimeout(() => {
                dispatch(fetchFavorites())
                    .catch(err => {
                        console.error('AppContainer: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', err);
                    });
            }, 100);

            return () => clearTimeout(timer);
        }
    }, [isAuthenticated, dispatch, isInitialized]);

    // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const handleLogin = React.useCallback(() => {
        try {
            if (onNavigateToAuth && typeof onNavigateToAuth === 'function') {
                onNavigateToAuth('login');
            } else {
                console.warn('AppContainer: Navigation handler –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è login');
            }
        } catch (error) {
            console.error('AppContainer: –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —ç–∫—Ä–∞–Ω—É –ª–æ–≥–∏–Ω–∞:', error);
        }
    }, [onNavigateToAuth]);

    const handleRegister = React.useCallback(() => {
        try {
            if (onNavigateToAuth && typeof onNavigateToAuth === 'function') {
                onNavigateToAuth('register');
            } else {
                console.warn('AppContainer: Navigation handler –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è register');
            }
        } catch (error) {
            console.error('AppContainer: –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —ç–∫—Ä–∞–Ω—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
        }
    }, [onNavigateToAuth]);

    return (
        <ErrorBoundary>
            <SafeAreaProvider>
                <SafeAreaView
                    style={{flex: 1, backgroundColor: '#ffffff'}}
                    edges={['top', 'right', 'left']}
                >
                    <StatusBar
                        backgroundColor="#ffffff"
                        barStyle="dark-content"
                        translucent={false}
                    />

                    {children}

                    <AuthDialog
                        ref={authDialogRef}
                        onLogin={handleLogin}
                        onRegister={handleRegister}
                    />

                    <CartAuthHandler/>
                </SafeAreaView>
            </SafeAreaProvider>
        </ErrorBoundary>
    );
};