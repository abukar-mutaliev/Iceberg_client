import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet, Alert } from 'react-native';
import * as Notifications from 'expo-notifications';

export const TestChatNavigation = () => {
    
    // –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∫ —á–∞—Ç—É
    const testChatNotification = async () => {
        try {
            console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ —á–∞—Ç—É –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
            
            await Notifications.scheduleNotificationAsync({
                content: {
                    title: 'üí¨ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞',
                    body: '–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —á–∞—Ç—É',
                    data: {
                        type: 'CHAT_MESSAGE',
                        messageId: 'test-123',
                        roomId: '1', // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π roomId
                        senderId: '1',
                        senderName: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                        url: 'iceberg://chat/1'
                    },
                    sound: true,
                },
                trigger: null, // –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
            });
            
            Alert.alert(
                '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω',
                '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —á–∞—Ç—É.',
                [{ text: 'OK' }]
            );
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —á–∞—Ç—É:', error);
            Alert.alert('–û—à–∏–±–∫–∞', error.message);
        }
    };

    // –¢–µ—Å—Ç URL –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const testUrlNavigation = async () => {
        try {
            console.log('üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º URL –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ —á–∞—Ç—É...');
            
            await Notifications.scheduleNotificationAsync({
                content: {
                    title: 'üîó –¢–µ—Å—Ç URL –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
                    body: '–¢–µ—Å—Ç –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ iceberg://chat/1',
                    data: {
                        url: 'iceberg://chat/1'
                    },
                    sound: true,
                },
                trigger: null,
            });
            
            Alert.alert(
                'URL —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω',
                '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å URL –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.',
                [{ text: 'OK' }]
            );
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
            Alert.alert('–û—à–∏–±–∫–∞', error.message);
        }
    };

    return (
        <View style={styles.container}>
            <Text style={styles.title}>üß™ –¢–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —á–∞—Ç—É</Text>
            
            <TouchableOpacity 
                style={styles.button} 
                onPress={testChatNotification}
            >
                <Text style={styles.buttonText}>üí¨ –¢–µ—Å—Ç CHAT_MESSAGE</Text>
            </TouchableOpacity>
            
            <TouchableOpacity 
                style={styles.button} 
                onPress={testUrlNavigation}
            >
                <Text style={styles.buttonText}>üîó –¢–µ—Å—Ç URL –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</Text>
            </TouchableOpacity>
            
            <Text style={styles.note}>
                üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:{'\n'}
                1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Ç–µ—Å—Ç–∞{'\n'}
                2. –ü–æ—è–≤–∏—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ{'\n'}
                3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ{'\n'}
                4. –î–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è —á–∞—Ç
            </Text>
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        padding: 20,
        backgroundColor: '#f5f5f5',
    },
    title: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 20,
        textAlign: 'center',
    },
    button: {
        backgroundColor: '#007AFF',
        padding: 15,
        borderRadius: 8,
        marginBottom: 10,
        alignItems: 'center',
    },
    buttonText: {
        color: 'white',
        fontSize: 16,
        fontWeight: 'bold',
    },
    note: {
        fontSize: 14,
        color: '#666',
        marginTop: 20,
        lineHeight: 20,
    },
});

export default TestChatNavigation;


