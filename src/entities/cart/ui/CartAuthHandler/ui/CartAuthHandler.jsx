import { useEffect, useRef } from 'react';
import { useSelector } from 'react-redux';
import { useCartAuth } from "@entities/cart";

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω
 * –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω –≤ –∫–æ—Ä–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–≤ AppContainer)
 */
export const CartAuthHandler = () => {
    const { handleAuthStateChange } = useCartAuth();
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const isAuthenticated = useSelector(state => !!state.auth?.user?.id);
    const userId = useSelector(state => state.auth?.user?.id);
    
    // –•—Ä–∞–Ω–∏–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const prevAuthState = useRef(isAuthenticated);
    const prevUserId = useRef(userId);

    useEffect(() => {
        const wasAuthenticated = prevAuthState.current;
        const nowAuthenticated = isAuthenticated;
        const wasUserId = prevUserId.current;
        const nowUserId = userId;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (wasAuthenticated !== nowAuthenticated || wasUserId !== nowUserId) {
            console.log('üîê CartAuthHandler: Auth state changed', {
                wasAuthenticated,
                nowAuthenticated,
                wasUserId,
                nowUserId
            });

            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            handleAuthStateChange(wasAuthenticated, nowAuthenticated);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            prevAuthState.current = nowAuthenticated;
            prevUserId.current = nowUserId;
        }
    }, [isAuthenticated, userId, handleAuthStateChange]);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    useEffect(() => {
        console.log('üîê CartAuthHandler: Initialized', {
            isAuthenticated,
            userId
        });
        
        prevAuthState.current = isAuthenticated;
        prevUserId.current = userId;
    }, []);

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç –Ω–∏—á–µ–≥–æ - —Ç–æ–ª—å–∫–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return null;
}; 