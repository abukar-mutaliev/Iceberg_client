/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å push —Ç–æ–∫–µ–Ω–∞–º–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º FCM —Ç–æ–∫–µ–Ω–æ–≤
 */

import PushNotificationService from './shared/services/PushNotificationService';
import { Platform } from 'react-native';

export const debugPushTokens = async () => {
    console.log('üîç === Push Token Debug ===');

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–±–æ—Ä–∫–∏
        const buildType = PushNotificationService.getBuildType();
        console.log('üì± Build type:', buildType);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å
        const isInitialized = PushNotificationService.isInitialized;
        console.log('üîß Service initialized:', isInitialized);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω
        const currentToken = PushNotificationService.getCurrentToken();
        console.log('üé´ Current token:', currentToken ? currentToken.substring(0, 50) + '...' : 'null');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º device ID
        const deviceId = PushNotificationService._deviceId;
        console.log('üìã Device ID:', deviceId);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
        console.log('üì± Platform:', Platform.OS);

        if (buildType === 'preview' || buildType === 'production') {
            console.log('‚úÖ Build type –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç FCM, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω...');

            try {
                const token = await PushNotificationService.getFCMToken();
                if (token) {
                    console.log('üé´ FCM token –ø–æ–ª—É—á–µ–Ω:', token.substring(0, 50) + '...');

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ç–æ–∫–µ–Ω–∞
                    const tokenType = PushNotificationService.getTokenType(token);
                    console.log('üîç Token type:', tokenType);

                    if (tokenType === 'fcm') {
                        console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å...');

                        const saved = await PushNotificationService.saveTokenToServerSafe(
                            token,
                            deviceId,
                            Platform.OS
                        );

                        console.log('üíæ Save result:', saved);
                    } else {
                        console.warn('‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è FCM —Ç–æ–∫–µ–Ω–æ–º');
                    }
                } else {
                    console.warn('‚ö†Ô∏è FCM —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω');
                }
            } catch (tokenError) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ FCM —Ç–æ–∫–µ–Ω–∞:', tokenError);
            }
        } else {
            console.log('‚ÑπÔ∏è Build type –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç FCM:', buildType);
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ push —Ç–æ–∫–µ–Ω–æ–≤:', error);
    }

    console.log('üîç === End Push Token Debug ===');
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
export default debugPushTokens;
