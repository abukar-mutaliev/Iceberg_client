import React from 'react';
import { View, Text, StyleSheet } from 'react-native';
import { normalize, normalizeFont } from '@shared/lib/normalize';
import { Color, FontFamily, Border, Shadow } from '@app/styles/GlobalStyles';
import {InfoCard} from "@shared/ui/Admin/AdminProduct";

export const AdminProductBasicInfo = ({
                                     product,
                                     displayData,
                                     showAdditionalInfo = false,
                                     supplier = null
                                 }) => {
    return (
        <View style={styles.container}>
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <View style={styles.mainInfoContainer}>
                <Text style={styles.productName}>{product.name}</Text>

                {product.description && (
                    <Text style={styles.productDescription}>{product.description}</Text>
                )}
            </View>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
            <View style={styles.infoCardsContainer}>
                {/* –ü–µ—Ä–≤—ã–π —Ä—è–¥ - –¶–µ–Ω–∞ –∑–∞ –∫–æ—Ä–æ–±–∫—É –∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ */}
                <View style={styles.infoCardsRow}>
                    <InfoCard
                        icon="üí∞"
                        title="–¶–µ–Ω–∞ –∑–∞ –∫–æ—Ä–æ–±–∫—É"
                        value={displayData?.boxPrice || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                        subtitle={product.itemsPerBox > 1 ? `${product.itemsPerBox} —à—Ç. –≤ –∫–æ—Ä–æ–±–∫–µ` : '–ü–æ—à—Ç—É—á–Ω–æ'}
                    />
                    <InfoCard
                        icon="‚ÇΩ"
                        title="–¶–µ–Ω–∞ –∑–∞ —à—Ç—É–∫—É"
                        value={displayData?.pricePerItem || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                    />
                </View>

                {/* –í—Ç–æ—Ä–æ–π —Ä—è–¥ - –¶–µ–Ω–∞ –∑–∞ —à—Ç—É–∫—É –∏ –í–µ—Å */}
                <View style={styles.infoCardsRow}>

                    <InfoCard
                        icon="‚öñÔ∏è"
                        title="–í–µ—Å"
                        value={displayData?.weight || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                    />
                    <InfoCard
                        icon="üìÇ"
                        title="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"
                        value={displayData?.categoryNames || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π'}
                        fullWidth={true}
                    />
                </View>

                {/* –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —Ä—è–¥ - –ü–æ—Å—Ç–∞–≤—â–∏–∫ */}
                <View style={styles.infoCardsRow}>
                    <InfoCard
                        icon="üè¢"
                        title="–ü–æ—Å—Ç–∞–≤—â–∏–∫"
                        value={displayData?.supplierName || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        fullWidth={true}
                    />
                </View>

                {/* –°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞ */}
                <View style={styles.infoCardsRow}>
                    <InfoCard
                        icon="üìä"
                        title="–°—Ç–∞—Ç—É—Å"
                        value={product.isActive !== false ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                        subtitle={product.isActive !== false ? '–¢–æ–≤–∞—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏' : '–¢–æ–≤–∞—Ä —Å–∫—Ä—ã—Ç –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π'}
                        fullWidth={true}
                    />
                </View>
            </View>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */}
            {showAdditionalInfo && (
                <View style={styles.additionalInfoContainer}>
                    <Text style={styles.sectionTitle}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Text>

                    <View style={styles.additionalInfoItem}>
                        <Text style={styles.additionalInfoLabel}>ID –ø—Ä–æ–¥—É–∫—Ç–∞:</Text>
                        <Text style={styles.additionalInfoValue}>{product.id}</Text>
                    </View>

                    {product.sku && (
                        <View style={styles.additionalInfoItem}>
                            <Text style={styles.additionalInfoLabel}>–ê—Ä—Ç–∏–∫—É–ª (SKU):</Text>
                            <Text style={styles.additionalInfoValue}>{product.sku}</Text>
                        </View>
                    )}

                    {product.createdAt && (
                        <View style={styles.additionalInfoItem}>
                            <Text style={styles.additionalInfoLabel}>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</Text>
                            <Text style={styles.additionalInfoValue}>
                                {new Date(product.createdAt).toLocaleDateString('ru-RU')}
                            </Text>
                        </View>
                    )}

                    {product.updatedAt && (
                        <View style={styles.additionalInfoItem}>
                            <Text style={styles.additionalInfoLabel}>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</Text>
                            <Text style={styles.additionalInfoValue}>
                                {new Date(product.updatedAt).toLocaleDateString('ru-RU')}
                            </Text>
                        </View>
                    )}

                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ */}
                    {supplier && (
                        <>
                            <View style={styles.additionalInfoItem}>
                                <Text style={styles.additionalInfoLabel}>–ü–æ—Å—Ç–∞–≤—â–∏–∫ (–¥–µ—Ç–∞–ª–∏):</Text>
                                <Text style={styles.additionalInfoValue}>
                                    {supplier.companyName || supplier.name}
                                </Text>
                            </View>
                            {supplier.email && (
                                <View style={styles.additionalInfoItem}>
                                    <Text style={styles.additionalInfoLabel}>Email –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:</Text>
                                    <Text style={styles.additionalInfoValue}>{supplier.email}</Text>
                                </View>
                            )}
                            {supplier.phone && (
                                <View style={styles.additionalInfoItem}>
                                    <Text style={styles.additionalInfoLabel}>–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:</Text>
                                    <Text style={styles.additionalInfoValue}>{supplier.phone}</Text>
                                </View>
                            )}
                        </>
                    )}
                </View>
            )}
        </View>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    mainInfoContainer: {
        padding: normalize(20),
        backgroundColor: Color.colorLightMode,
    },
    productName: {
        fontSize: normalizeFont(24),
        fontWeight: '700',
        color: Color.dark,
        marginBottom: normalize(8),
        fontFamily: FontFamily.sFProDisplay,
    },
    productDescription: {
        fontSize: normalizeFont(16),
        color: Color.textSecondary,
        lineHeight: normalize(22),
        fontFamily: FontFamily.sFProText,
    },
    infoCardsContainer: {
        padding: normalize(16),
        paddingTop: 0,
    },
    infoCardsRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: normalize(12),
    },
    additionalInfoContainer: {
        margin: normalize(16),
        backgroundColor: Color.colorLightMode,
        borderRadius: Border.radius.medium,
        padding: normalize(16),
        ...Shadow.light,
    },
    sectionTitle: {
        fontSize: normalizeFont(18),
        fontWeight: '600',
        color: Color.dark,
        marginBottom: normalize(16),
        fontFamily: FontFamily.sFProDisplay,
    },
    additionalInfoItem: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        paddingVertical: normalize(8),
        borderBottomWidth: 0.5,
        borderBottomColor: Color.border,
    },
    additionalInfoLabel: {
        fontSize: normalizeFont(14),
        color: Color.textSecondary,
        fontFamily: FontFamily.sFProText,
        flex: 1,
    },
    additionalInfoValue: {
        fontSize: normalizeFont(14),
        fontWeight: '500',
        color: Color.dark,
        fontFamily: FontFamily.sFProText,
        textAlign: 'right',
        flex: 1,
    },
});

export default AdminProductBasicInfo;